create table Quest
(
Id int not null auto_increment,
question varchar(255),
difficulty char(1),
timeCre timestamp,
timeLatMod timestamp,
primary key(Id)
);

create table Answ
(
Id int not null auto_increment,
answer varchar(255),
primary key(Id)
);

create table QuestAnsw
(
Id int not null auto_increment,
correct  tinyint(1),
questId int,
answId int,
primary key(Id),
foreign key (questId) references Quest(Id),
foreign key (answId) references Answ(Id)
);

create table Topic
(
Id int not null auto_increment,
name varchar(255),
description varchar(255),
parent int,
primary key(Id)
);

create table TopicQuest
(
Id int not null auto_increment,
questId int,
topicId int,
primary key(Id),
foreign key (questId) references Quest(Id),
foreign key (topicId) references Topic(Id)
);

create table Tag
(
Id int not null auto_increment,
tagname varchar(255),
userId int,
primary key(Id),
foreign key (userId) references Users(Id)
);

create table TagQuest
(
Id int not null auto_increment,
tagId int,
questId int,
primary key(Id),
foreign key (tagId) references Tag(Id),
foreign key (questId) references Quest(Id)
);

create table Users
(
id INT NOT NULL AUTO_INCREMENT,
Email varchar(100),
Password varchar(100),
Fname varchar(50),
Lname varchar(50),
Primary key(Id)
);

create table ACK
(
Id int not null auto_increment,
ackNum int,
userId int,
status boolean,
primary key (Id),
foreign key (userId) references Users(Id)
);

create table Diff
(
  Id int,
  name varchar(255),
  abbreviation char,
  Primary key(Id)
);

CREATE TRIGGER deleteFromQuest_Answ_TopicQuest    
  AFTER DELETE ON QuestAnsw     
  FOR EACH ROW     
BEGIN
SET FOREIGN_KEY_CHECKS=0;
  DELETE FROM Quest where OLD.questId =Id;
  DELETE FROM Answ where OLD.answId =Id;
  DELETE FROM TopicQuest where OLD.questId=questId;
SET FOREIGN_KEY_CHECKS=1;
END;

create table ResetPass
(
Id int,
userId int,
fCcode varchar(255),
Primary key(Id),
foreign key (userId) references Users(id) 
);
