<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAA7NJREFUSEuNVllPE1EU7j8yURRkESgCZbMtspW97PrgAzHB+GDiAyKbQFkkNiSE
        B4MoMQqVQkvxQTRReVDWigI+GAgYU2MChJgc5zszt850BvFLTqZz753vu+c7587URCdgce8DDS+56dZ8
        E13xO6lmppSvuMc45k/CsSKejWdU7LFT0aSVKrwFVD1dQrUzZVTnK+cr7jGOeazD+uOgEzn8fUgN/kpy
        eGy8a5CeFFiH9XgOz0dCI7K3v0t5E1nknHZoCCq9hVQxVUBOryOcjVHgOTwPHjXCItgBFlTPlPADIIcV
        uB/86KKR1SFqeXub8ieyqVwSrPUZi2E9eNQZhUWQqsgAfsPnYGiV59a+rdCb9XkK/QrxvXtxgPInc3QC
        IsADPgEWQdHgKRYgAwgAs8s+Smg9S+aOWLp4L4F/Ox7k8tzEylMq8lh1AiLAJ5qBRRwSqSgyLPoUWmOB
        2JbTZO/PpNyBrHBku1IpqT2GH7422iBn79eLyM0gb9aEPgexmICnAHYdKSDC0p1MXb422tzdIHN7LNV4
        S6l+tkInBF7wm4aX3dzvGEQXocioASwyEkDY+jIoqyeFN3Oh9RxZeyzkfO6g+oBWCLzgN+HkVk8Xy4NS
        16CLXq+/4hoYCSCQobAssS2a763dFiody6eGucqwCHjBb8IrQvQ+zgHaFF0Eu4wEEJd606lsqFARieEx
        FpIyKhqxh4XAC36TKLgYxDkA0EUocqQAArt/GQyQd8lDaV2JmjlbbwbluXNk66SGAL8mEwQOGs4BAEtQ
        ZNQAO0UGEGh60sjz0XdOUapka2SD2PsyeQy8VwNV2pqos5namGQidBGKnNx+ni1CBgLB7VUaXxjjzdj6
        M7RCkkhOTxrdnLuu7S61EA7aDX8jfdn+rFDKgEXIILgjvw2Are+bFHc3SieUKW3O5evUnpPIqPIVk/2h
        heKbo9gmFBk1gEXjC48UCRlfWeiMRsjcEUcLW+/0Jz4yUEDnRDF3jvAeV1iEDNSAEGzFPMRSOuN5XPfu
        Mgqc5uoXJWR1yQ0AIZBg55FCbd5mrmFKZxw9fj/KY4ZvYaOol9qxdrqMWxTdoxZCBgJ1IxWU0W2mvPs5
        yohKJPJ7YhjKixDZqIVgUetUMwukdyXxQT442leYVSKA0ZdRF5IQ7Ls8mM1ZiRrBImQAgZ2f2wqjDI0I
        8L/f+IZAJZ9sCMlFjmOLDo4OFKa/0IkInPhvRbLV6XeQZTCJUjriw0U2wrEiAv/83yUd5OUfi8rK40D0
        Byo47BL+rU4RAAAAAElFTkSuQmCC
</value>
  </data>
</root>